<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <PackageId>YellowDogMan.Assimp</PackageId>
    <PackageProjectUrl>https://github.com/Yellow-Dog-Man/AssimpNet</PackageProjectUrl>
    <RepositoryUrl>https://github.com/Yellow-Dog-Man/AssimpNet</RepositoryUrl>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworks>netstandard1.3;net35;net4;</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <SignAssembly Condition=" '$(MSBuildRuntimeType)' != 'Core'">true</SignAssembly>
    <AssemblyOriginatorKeyFile Condition=" '$(MSBuildRuntimeType)' != 'Core'">AssimpKey.snk</AssemblyOriginatorKeyFile>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>Nicholas Woodfield, Yellow Dog Man Studios s.r.o.</Authors>
    <Company />
    <Version>5.0.0-beta1</Version>
    <PackageLicenseFile>License.txt</PackageLicenseFile>
    <Copyright>Copyright © 2012-2020 Nicholas Woodfield</Copyright>
    <PackageIcon>logo.png</PackageIcon>
    <PackageProjectUrl>https://bitbucket.org/Starnick/assimpnet</PackageProjectUrl>
    <RepositoryUrl>https://bitbucket.org/Starnick/assimpnet.git</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedAllSources>true</EmbedAllSources>
    <IncludeContentInPack>true</IncludeContentInPack>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IsPackable>true</IsPackable>
    <Description>Fork of A .NET Wrapper for the Open Asset Import (Assimp) library. The library is able to import dozens of different 3D model formats (e.g. OBJ, FBX, GLTF, Collada) and export to several formats (e.g. OBJ, GLTF, Collada). This release targets version 5.0.1 of the native library.</Description>
    <PackageTags>Model 3D Graphics Assimp Mesh Importers Content Assets FBX Collada GLTF OBJ 3DS DXF</PackageTags>
    <RootNamespace>Assimp</RootNamespace>
    <AssemblyName>AssimpNet</AssemblyName>
    <Title>AssimpNet</Title>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)'=='Release'">
    <DocumentationFile>bin\Release\$(TargetFramework)\AssimpNet.xml</DocumentationFile>
    <DebugType>embedded</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <AllowedOutputExtensionsInPackageBuildOutputFolder>$(AllowedOutputExtensionsInPackageBuildOutputFolder);.pdb</AllowedOutputExtensionsInPackageBuildOutputFolder>
  </PropertyGroup>

  <Target Name="EnsureEmbeddedSymbolsInPackage" BeforeTargets="GetPackageSymbolFiles" Condition="'$(Configuration)'=='Release' AND '$(IncludeSymbols)'=='true'">
    <Message Text="Configuring symbol package for embedded debug symbols..." Importance="high" />
    
    <ItemGroup>
      <SymbolPackageFile Remove="@(SymbolPackageFile)" Condition="'%(Extension)' == '.pdb'" />
    </ItemGroup>
    
    <ItemGroup>
      <SymbolPackageFile Include="bin/Release/net35/$(AssemblyName).dll" Condition="Exists('bin/Release/net35/$(AssemblyName).dll')">
        <TargetPath>lib/net35/$(AssemblyName).dll</TargetPath>
      </SymbolPackageFile>
      <SymbolPackageFile Include="bin/Release/net4/$(AssemblyName).dll" Condition="Exists('bin/Release/net4/$(AssemblyName).dll')">
        <TargetPath>lib/net40/$(AssemblyName).dll</TargetPath>
      </SymbolPackageFile>
      <SymbolPackageFile Include="bin/Release/netstandard1.3/$(AssemblyName).dll" Condition="Exists('bin/Release/netstandard1.3/$(AssemblyName).dll')">
        <TargetPath>lib/netstandard1.3/$(AssemblyName).dll</TargetPath>
      </SymbolPackageFile>
    </ItemGroup>
    
    <Message Text="Symbol package will contain DLLs with embedded debug symbols and sources" Importance="high" />
  </Target>

  <ItemGroup>
    <Content Include="..\logo.png" Link="nuget\logo.png" PackagePath="" />
    <Content Include="..\ChangeLog.txt" Link="nuget\ChangeLog.txt" PackagePath="" />
    <Content Include="..\License.txt" Link="nuget\License.txt" PackagePath="" />
    <Content Include="..\Docs\AssimpNet Documentation %28October 2018%29.chm" Link="nuget\AssimpNet Documentation %28October 2018%29.chm" PackagePath="" />
    <Content Include="..\libs\Assimp\win-x64\assimp.dll" Link="nuget\runtimes\win-x64\native\assimp.dll" PackagePath="runtimes\win-x64\native" />
    <Content Include="..\libs\Assimp\win-x86\assimp.dll" Link="nuget\runtimes\win-x86\native\assimp.dll" PackagePath="runtimes\win-x86\native" />
    <Content Include="..\libs\Assimp\linux-x64\libassimp.so" Link="nuget\runtimes\linux-x64\native\libassimp.so" PackagePath="runtimes\linux-x64\native" />
    <Content Include="..\libs\Assimp\osx-x64\libassimp.dylib" Link="nuget\runtimes\osx-x64\native\libassimp.dylib" PackagePath="runtimes\osx-x64\native" />
    <Content Include="AssimpNet.targets" Link="nuget\build\AssimpNet.targets" PackagePath="build" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MemoryInterop.ILPatcher" Version="2.2.0">
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>

  <!-- Copies Unity plugin files into a folder with Release build DLLs which can be drag n dropped into a unity project -->
  <Import Project="..\UnityPlugin\UnityPlugin.targets" />

  <!-- Copy targets and native files to a build folder so unit tests can access it (overall will setup a mock nuget folder structure)  -->
  <Target Name="CopyBuildFiles" AfterTargets="AfterBuild">
    <Copy SourceFiles="%(Content.Identity)" DestinationFiles="bin\$(Configuration)\%(Content.Link)" SkipUnchangedFiles="true" Condition="'%(Content.Link)' != ''" />
  </Target>

</Project>
